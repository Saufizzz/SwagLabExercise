{"name": "test_invalid_credentials", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//h3[contains(text(),'Epic sadface: Username and password do not match a')]\"}\n  (Session info: chrome=129.0.6668.59); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6E61FFDA5+29557]\n\t(No symbol) [0x00007FF6E6172240]\n\t(No symbol) [0x00007FF6E602B6EA]\n\t(No symbol) [0x00007FF6E607FA15]\n\t(No symbol) [0x00007FF6E607FC6C]\n\t(No symbol) [0x00007FF6E60CBB07]\n\t(No symbol) [0x00007FF6E60A753F]\n\t(No symbol) [0x00007FF6E60C88A3]\n\t(No symbol) [0x00007FF6E60A72A3]\n\t(No symbol) [0x00007FF6E60712DF]\n\t(No symbol) [0x00007FF6E6072451]\n\tGetHandleVerifier [0x00007FF6E652DCBD+3363469]\n\tGetHandleVerifier [0x00007FF6E6579B47+3674391]\n\tGetHandleVerifier [0x00007FF6E656EAEB+3629243]\n\tGetHandleVerifier [0x00007FF6E62BFC66+815670]\n\t(No symbol) [0x00007FF6E617D6EF]\n\t(No symbol) [0x00007FF6E61792B4]\n\t(No symbol) [0x00007FF6E6179450]\n\t(No symbol) [0x00007FF6E61681FF]\n\tBaseThreadInitThunk [0x00007FF84577257D+29]\n\tRtlUserThreadStart [0x00007FF8464EAF28+40]", "trace": "self = <tests.test_e2e.TestLogin object at 0x00000283E466D8E0>\n\n    def test_invalid_credentials(self):\n        login = LoginPage(self.driver)\n        login.insertUsername(self.username)\n        login.insertPassword(self.password)\n        login.clickLoginBtn()\n>       assert login.errMsg().is_displayed, \"error Not Found\"\n\ntests\\test_e2e.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjectModel\\loginPage.py:25: in errMsg\n    return self.driver.find_element(*LoginPage.ErrMsg)\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000283E51E95B0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF6E61681FF]\\\\n\\\\tBaseThreadInitThunk [0x00007FF84577257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF8464EAF28+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//h3[contains(text(),'Epic sadface: Username and password do not match a')]\"}\nE         (Session info: chrome=129.0.6668.59); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6E61FFDA5+29557]\nE       \t(No symbol) [0x00007FF6E6172240]\nE       \t(No symbol) [0x00007FF6E602B6EA]\nE       \t(No symbol) [0x00007FF6E607FA15]\nE       \t(No symbol) [0x00007FF6E607FC6C]\nE       \t(No symbol) [0x00007FF6E60CBB07]\nE       \t(No symbol) [0x00007FF6E60A753F]\nE       \t(No symbol) [0x00007FF6E60C88A3]\nE       \t(No symbol) [0x00007FF6E60A72A3]\nE       \t(No symbol) [0x00007FF6E60712DF]\nE       \t(No symbol) [0x00007FF6E6072451]\nE       \tGetHandleVerifier [0x00007FF6E652DCBD+3363469]\nE       \tGetHandleVerifier [0x00007FF6E6579B47+3674391]\nE       \tGetHandleVerifier [0x00007FF6E656EAEB+3629243]\nE       \tGetHandleVerifier [0x00007FF6E62BFC66+815670]\nE       \t(No symbol) [0x00007FF6E617D6EF]\nE       \t(No symbol) [0x00007FF6E61792B4]\nE       \t(No symbol) [0x00007FF6E6179450]\nE       \t(No symbol) [0x00007FF6E61681FF]\nE       \tBaseThreadInitThunk [0x00007FF84577257D+29]\nE       \tRtlUserThreadStart [0x00007FF8464EAF28+40]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "tests/test_e2e.py_TestLogin_test_invalid_credentials.png", "source": "0e8d6c63-2147-4b2f-82e3-e0f125b5eac7-attachment.png", "type": "image/png"}], "start": 1727138519920, "stop": 1727138520288, "uuid": "05f5ed0b-6ba9-478c-95ab-eaf05d4c6b61", "historyId": "5bd273936520b36b4acc0d9015deb6be", "testCaseId": "5bd273936520b36b4acc0d9015deb6be", "fullName": "tests.test_e2e.TestLogin#test_invalid_credentials", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup_and_teardown')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_e2e"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "muhdsaufi"}, {"name": "thread", "value": "9716-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_e2e"}]}